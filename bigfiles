#!/bin/bash

# Uses first argument to set percentage of full HDD PLCs to check for. 50 or greater by default
# Account for if a first arguement exist and if it is a number
if [ -n "${1}" ] && [[ ${1} != *[!0-9]* ]]; then
    PERCENT=${1}
else
    PERCENT=50
fi

# How many top offenders to look for, by default it find the top five big files/folders
# Account for if a second arguement exist and if it is a number
if [ -n "${2}" ] && [[ ${2} != *[!0-9]* ]]; then
    TOP_FILES=${2}
else
    TOP_FILES=5
fi

REPORT=$(cat free_space.csv)

#Take the oringal report file and only pull out the PLC's IPs based on percent of free disk space
QUERY=$(echo "$REPORT" | awk -F',' '{print $7 " - " $1}' | awk -F'%' '{print $1 $2}' | awk 'int($1)>='$PERCENT | sort -n | awk '{print $3}')

# REBOOT_PLC will always be the last arguement provided
REBOOT_PLC=$BASH_ARGV

# Declare where the temp files will be stored
FILES_FOUND=/tmp/big_files.txt
FILE_NAMES=/tmp/parse.txt
FILE_SIZE=/tmp/file.txt
AMOUNT_FOUND=/tmp/lines.txt

# Cleanup temp files
function cleanup {
    rm -rf $FILE_SIZE
    rm -rf $FILE_NAMES
    rm -rf $AMOUNT_FOUND
    rm -rf $FILES_FOUND
}

# Log in and get top x big files (determined by TOP_FILES)
for plcs in ${QUERY}; do
    echo "Checking ${plcs}..."
    sshpass -f ~/.plcssh ssh -oStrictHostKeyChecking=no root@${plcs} find /* -type f -exec du -a {} + 2>/dev/null | sort -n | tail -${TOP_FILES} &>> $FILES_FOUND
    if [ "${REBOOT_PLC}" == "reboot" ]; then
        echo "Rebooting ${plcs}..."
        info -x ${plcs}
    fi
done

# Take the list of big files provided above and organize it
# Create a list of only unique items and total how many instances of each file
# Get average size of the files found and present in size=MB
PARSE=$(cat "$FILES_FOUND" | awk '{print $2}' | sort -n | uniq)
for size in $PARSE; do
    SUM=0
    TOTAL=$(cat $FILES_FOUND | grep $size | awk '{print $1}')
    LINES=$(cat $FILES_FOUND | grep $size | wc -l)
    for values in $TOTAL; do
        SUM=`expr $SUM + $values`
    done
    AVERAGE=`expr $SUM / $LINES`
    echo "$AVERAGE" | awk '{GB = $1 / 1024 ; print GB " MB"}' >> $FILE_SIZE
    echo "$LINES" >> $AMOUNT_FOUND
done

# Display the results to the user in a nicely organzied fashion
echo "$PARSE" >> $FILE_NAMES
echo "Average Size of File | File/Folder Name | # of PLCs File was Found"
paste -d ':' "$FILE_SIZE" "$FILE_NAMES" "$AMOUNT_FOUND" | awk -F':' '{print $1": "$2" - "$3" PLC(s) found with file"}' | sort -n

# Remove temp files
#cleanup &>/dev/null
